{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network."
      }
    },
    "vNetAddressSpaces": {
      "type": "string",
      "metadata": {
        "description": "The address spaces in CIDR form (e.g. '10.0.0.0/16') that will be assigned to this VNet."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location in which to deploy this virtual network."
      }
    },

    "virtualNetworkTags": {
      "type": "object",
      "defaultValue": "",      
      "metadata": {
        "description": "A hash table containing the label-value pairs with which to tag this virtual network."
      }
    },
    "addErGateway": {
      "type": "bool",
      "defaultValue": "false",
      "metadata": {
        "description": "true or false to create an express route gateway"
      }
    },   
    "erGatewayName": {
      "type": "string",
      "defaultValue": "ER-Gateway",
      "metadata": {
        "description": "Express RouteGateway Name"
      }
    },
    "erGatewayPublicIPName": {
      "type": "string",
      "defaultValue": "ER-Gateway-PIP",      
      "metadata": {
        "description": "Aribtary name for public IP resource used for an azure express route gateway"
      }
    },
    "erGatewaySku": {
      "type": "string",
      "defaultValue": "HighPerformance",
      "metadata": {
        "description": "The Sku of the Gateway. This must be one of Standard, HighPerformance, or UltraPerformance. An empty string is accepted for the case of not creating a gateway"
      }
    },
    "addVpnGateway": {
      "type": "bool",
      "defaultValue": "false",
      "metadata": {
        "description": "true or false to create a VPN gateway"
      }
    },
    "vpnGatewayName": {
      "type": "string",
      "defaultValue": "VPN-Gateway",
      "metadata": {
        "description": "VPN Gateway Name"
      }
    },
    "vpnGatewayPublicIPName": {
      "type": "string",
      "defaultValue": "VPN-Gateway-PIP",
      "metadata": {
        "description": "Aribtary name for public IP resource used for an azure gateway"
      }
    },
    "vpnGatewaySku": {
      "type": "string",
      "defaultValue": "VpnGw1",
      "metadata": {
        "description": "The Sku of the VPN Gateway. This must be one of VpnGw1, VpnGw2, VpnGw3, Basic. An empty string is accepted for the case of not creating a gateway"
      }
    },
    "vpnType": {
      "type": "string",
      "metadata": {
        "description": "Route based or policy based"
      },
      "defaultValue": "RouteBased",
      "allowedValues": [
        "RouteBased",
        "PolicyBased"
      ]
    },
    "GatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "Express Route GatewaySubnet Prefix"
      }
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "gatewaySubnetRef": "[concat(variables('vnetID'),'/subnets/','GatewaySubnet')]",
    "routingWeight": 3,
    "nullString": "",
    "erGatewayType": "ExpressRoute",
    "vpnGatewayType": "VPN",
    "gwSubnet": "{'name': 'GatewaySubnet', 'properties': {'addressPrefix': '[parameters('gatewaySubnetPrefix')]'}}"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2016-03-30",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('virtualNetworkTags')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vNetAddressSpaces')]"
          ]
        },
        "subnets": []
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "condition": "[or(equals(parameters('addERGateway'), bool('True')), equals(parameters('addVpnGateway'),bool('True')))]",
      "name": "[concat(parameters('virtualNetworkName'), '/GatewaySubnet')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "addressPrefix": "[parameters('GatewaySubnetPrefix')]"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "condition": "[equals(parameters('addeRGateway'),bool('True'))]",
      "name": "[parameters('erGatewayPublicIPName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Network/publicIPAddresses",
      "condition": "[equals(parameters('addVpnGateway'),bool('True'))]",
      "name": "[parameters('vpnGatewayPublicIPName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "condition": "[equals(parameters('addERGateway'),bool('True'))]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('erGatewayName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('erGatewayPublicIPName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('erGatewayPublicIPName'))]"
              }
            },
            "name": "[concat(parameters('erGatewayPublicIPName'), '-Config')]"
          }
        ],
        "sku": {
          "name": "[parameters('erGatewaySku')]",
          "tier": "[parameters('erGatewaySku')]"
        },
        "gatewayType": "[variables('erGatewayType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "condition": "[equals(parameters('addVpnGateway'),bool('True'))]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('vpnGatewayName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('vpnGatewayPublicIPName'))]",
        "[if(equals(parameters('addErGateway'),bool('True')), concat('Microsoft.Network/virtualNetworkGateways/', parameters('erGatewayName')), concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName')))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('gatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('vpnGatewayPublicIPName'))]"
              }
            },
            "name": "[concat(parameters('vpnGatewayPublicIPName'), '-Config')]"
          }
        ],
        "sku": {
          "name": "[if(and(equals(parameters('addErGateway'),bool('True')), equals(parameters('vpnGatewaySku'),string('Basic')) ), json('null'),parameters('vpnGatewaySku' ))]",
          "tier": "[if(and(equals(parameters('addErGateway'),bool('True')), equals(parameters('vpnGatewaySku'),string('Basic')) ), json('null'),parameters('vpnGatewaySku' ))]"
        },
        "gatewayType": "[variables('vpnGatewayType')]",
        "vpnType": "[if(equals(parameters('addErGateway'), bool('True')), 'RouteBased', parameters('vpnType'))]"
      }
    }
  ]
}